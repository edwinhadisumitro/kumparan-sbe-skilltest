// Code generated by mockery v2.3.0. DO NOT EDIT.

package mocks

import (
	news "kumparan-sbe-skilltest/internal/model/news"

	mock "github.com/stretchr/testify/mock"
)

// Library is an autogenerated mock type for the Library type
type Library struct {
	mock.Mock
}

// GetNews provides a mock function with given fields: page
func (_m *Library) GetNews(page int) ([]news.News, error) {
	ret := _m.Called(page)

	var r0 []news.News
	if rf, ok := ret.Get(0).(func(int) []news.News); ok {
		r0 = rf(page)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]news.News)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(page)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// PublishNews provides a mock function with given fields: _a0
func (_m *Library) PublishNews(_a0 news.News) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(news.News) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SaveNews provides a mock function with given fields: _a0
func (_m *Library) SaveNews(_a0 news.News) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(news.News) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
